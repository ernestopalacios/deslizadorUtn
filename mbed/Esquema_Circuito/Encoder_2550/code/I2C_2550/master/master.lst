CCS PCH C Compiler, Version 4.068, 2159               01-Jul-12 17:10

               Filename: \\VBOXSVR\ernesto\PROYECTOS MECATRONICA\PIC C Progrmas\I2C_2550\master\master.lst

               ROM used: 346 bytes (1%)
                         Largest free fragment is 32418
               RAM used: 38 (2%) at main() level
                         40 (2%) worst case
               Stack:    2 worst case (0 in main + 2 for interrupts)

*
0000:  GOTO   0120
*
0008:  MOVWF  05
000A:  MOVFF  FD8,06
000E:  MOVFF  FE0,07
0012:  MOVLB  0
0014:  MOVFF  FE9,0D
0018:  MOVFF  FEA,08
001C:  MOVFF  FE1,09
0020:  MOVFF  FE2,0A
0024:  MOVFF  FD9,0B
0028:  MOVFF  FDA,0C
002C:  MOVFF  FF3,14
0030:  MOVFF  FF4,15
0034:  MOVFF  FFA,16
0038:  MOVFF  00,0F
003C:  MOVFF  01,10
0040:  MOVFF  02,11
0044:  MOVFF  03,12
0048:  MOVFF  04,13
004C:  BTFSS  FF2.3
004E:  GOTO   0058
0052:  BTFSC  FF2.0
0054:  GOTO   00D6
0058:  MOVFF  0F,00
005C:  MOVFF  10,01
0060:  MOVFF  11,02
0064:  MOVFF  12,03
0068:  MOVFF  13,04
006C:  BSF    0E.7
006E:  MOVFF  0D,FE9
0072:  MOVFF  08,FEA
0076:  MOVFF  09,FE1
007A:  MOVFF  0A,FE2
007E:  MOVFF  0B,FD9
0082:  MOVFF  0C,FDA
0086:  MOVFF  14,FF3
008A:  MOVFF  15,FF4
008E:  MOVFF  16,FFA
0092:  MOVF   05,W
0094:  MOVFF  07,FE0
0098:  MOVFF  06,FD8
009C:  RETFIE 0
.................... // I2C source code for testing functionality 
....................  
.................... //  PIC 18F2550 @ 48MHz 
.................... //  Crystal 4Mhz 
.................... // 
.................... // 
....................  
....................  
.................... #include <18F2550.h> 
.................... //////// Standard Header file for the PIC18F2550 device //////////////// 
.................... #device PIC18F2550 
.................... #list 
....................  
.................... #fuses XTPLL,NOMCLR,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN 
.................... #use delay(clock=48M)  
.................... #use i2c( MASTER, fast, sda=PIN_B0, scl=PIN_B1, FORCE_HW ) 
009E:  BCF    FC6.7
00A0:  BCF    F9E.3
00A2:  MOVFF  27,FC9
00A6:  MOVLW  02
00A8:  BTFSC  FC6.7
00AA:  BRA    00B6
00AC:  BTFSS  F9E.3
00AE:  BRA    00AC
00B0:  MOVLW  00
00B2:  BTFSC  FC5.6
00B4:  MOVLW  01
00B6:  MOVWF  01
00B8:  RETLW  00
00BA:  BSF    FC5.3
00BC:  BTFSC  FC5.3
00BE:  BRA    00BC
00C0:  BTFSC  00.0
00C2:  BCF    FC5.5
00C4:  BTFSS  00.0
00C6:  BSF    FC5.5
00C8:  BSF    FC5.4
00CA:  BTFSC  FC5.4
00CC:  BRA    00CA
00CE:  MOVFF  FC9,01
00D2:  GOTO   010C (RETURN)
....................  
.................... //--------------_________ DEFINICIONES___________------------------------------- 
.................... #byte     PORTA=0xF80 
.................... #byte     PORTB=0xF81 
.................... #byte     PORTC=0xF82 
.................... #byte     PORTD=0xF83 
.................... #byte     TRISA=0xF92 
.................... #byte     TRISB=0xF93 
.................... #byte     TRISC=0xF94 
.................... #byte     TRISD=0xF95 
.................... #byte    INTCON=0xFF2 
.................... #byte   INTCON2=0xFF1 
.................... //------------------------------------------------------------------------------ 
....................  
.................... #define  led_alive  PIN_A0   // [02] AN0 
.................... #define  test       PIN_B4 
.................... #define  leer       PIN_B5 
....................  
.................... //--------_________VARIABLES GLOBALES_________---------------------------------- 
....................  
.................... byte i2c_rx [10];       // Cadena de caracteres Recibida 
.................... int32 count; 
....................  
.................... //--------_________INTERRUPCION EXTERNA_______---------------------------------- 
.................... #INT_RB 
.................... void external_RB4() 
.................... { 
....................    int8 c; 
....................    if( input( test ) ) 
00D6:  BSF    F93.4
00D8:  BTFSS  F81.4
00DA:  BRA    00F6
....................    { 
....................       i2c_start(); 
00DC:  BSF    FC5.0
00DE:  BTFSC  FC5.0
00E0:  BRA    00DE
....................       i2c_write(0x36); //Direccion 
00E2:  MOVLW  36
00E4:  MOVWF  27
00E6:  RCALL  009E
....................       i2c_write(0x02); //Led_On 
00E8:  MOVLW  02
00EA:  MOVWF  27
00EC:  RCALL  009E
....................       i2c_stop(); 
00EE:  BSF    FC5.2
00F0:  BTFSC  FC5.2
00F2:  BRA    00F0
....................    } 
....................    else if( input( leer ) ) 
00F4:  BRA    0116
00F6:  BSF    F93.5
00F8:  BTFSS  F81.5
00FA:  BRA    0116
....................    { 
....................       i2c_start(); 
00FC:  BSF    FC5.0
00FE:  BTFSC  FC5.0
0100:  BRA    00FE
....................       i2c_write( 0x36+1 ); 
0102:  MOVLW  37
0104:  MOVWF  27
0106:  RCALL  009E
....................       i2c_rx[0] = i2c_read(0); 
0108:  CLRF   00
010A:  BRA    00BA
010C:  MOVFF  01,18
....................       i2c_stop(); 
0110:  BSF    FC5.2
0112:  BTFSC  FC5.2
0114:  BRA    0112
....................    } 
....................  
....................    c = PORTB; 
0116:  MOVFF  F81,26
....................     
.................... } 
....................  
.................... //------------------------------------------------------------------------------ 
011A:  BCF    FF2.0
011C:  GOTO   0058
.................... void main( void ) 
.................... { 
0120:  CLRF   FF8
0122:  BCF    FD0.7
0124:  BSF    0D.7
0126:  CLRF   FEA
0128:  CLRF   FE9
012A:  BSF    F93.1
012C:  BSF    F93.0
012E:  MOVLW  1D
0130:  MOVWF  FC8
0132:  MOVLW  28
0134:  MOVWF  FC6
0136:  BCF    FC7.7
0138:  BCF    FC7.6
013A:  MOVF   FC1,W
013C:  ANDLW  C0
013E:  IORLW  0F
0140:  MOVWF  FC1
0142:  MOVLW  07
0144:  MOVWF  FB4
....................    enable_interrupts( GLOBAL ); 
0146:  MOVLW  C0
0148:  IORWF  FF2,F
....................    enable_interrupts( INT_RB );    // Enviar comando 
014A:  BSF    FF2.3
....................     
....................    count = 0; 
014C:  CLRF   25
014E:  CLRF   24
0150:  CLRF   23
0152:  CLRF   22
....................     
....................    bit_clear(TRISA,0);        //  Led como salida 
0154:  BCF    F92.0
....................    bit_set  (TRISA,2);       // Enc_A <- entrada 
0156:  BSF    F92.2
....................    bit_set  (TRISB,4);      // Enc_B <- entrada 
0158:  BSF    F93.4
....................  
....................    while(1) 
....................    { 
....................  
....................  
....................    
....................    } 
015A:  BRA    015A
.................... } 
015C:  SLEEP 

Configuration Fuses:
   Word  1: 0220   XTPLL NOIESO NOFCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0300   PBADEN CCP2C1 NOMCLR NOLPT1OSC RESERVED
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST RESERVED
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
